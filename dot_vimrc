set nocompatible

call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-sleuth'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'bronson/vim-trailing-whitespace'
Plug 'tpope/vim-surround'
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'mattn/vim-goimports'
Plug 'github/copilot.vim'
Plug 'iberianpig/tig-explorer.vim'

call plug#end()

let lsp_log_verbose=1
let lsp_log_file = '/tmp/lsp.log'
let g:copilot_filetypes = { 'gitcommit': v:true }
let g:lsp_diagnostics_virtual_text_enabled = 0
let g:lsp_document_code_action_signs_enabled = 0
let g:lsp_diagnostics_float_cursor = 1

let g:lsp_settings_filetype_ruby = ['ruby-lsp', 'rubocop-lsp-mode']
let g:lsp_settings_filetype_go = ['gopls', 'golangci-lint-langserver']

"" autocmd
autocmd BufWritePre * :FixWhitespace

"" set vim variables """"""""""""""""""""""""""""""""""""""""""""""""""""""
syntax on

set visualbell t_vb=
set viminfo+=n~/.vim/viminfo.txt
set directory=~/.vim/directory
set backupdir=~/.vim/backupdir
set undodir=~/.vim/undodir
set undofile
set backup

set hidden
set incsearch
set hlsearch
set ignorecase
set smartcase
set smartindent

set laststatus=2
set clipboard=unnamedplus
set omnifunc=lsp#complete

set statusline=%F%m\ %=%l:%v\ %{&ff}

"" key maps """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let mapleader = "\,"
nnoremap <silent> <Leader>v :edit $HOME/.vimrc<CR>
nnoremap <Leader>re :source $HOME/.vimrc<CR>
nnoremap <Leader>gh :!gh browse $(git ls-files --full-name %)<CR><CR>

nnoremap <silent> <c-p> :Files<CR>
nnoremap <silent> <c-h> :History<CR>
nnoremap <silent> <c-k> :Buffers<CR>

nnoremap <silent> <C-]> :LspDefinition<CR>
nnoremap <silent> <C-\> :LspTypeDefinition<CR>
nnoremap <silent> <C-[> :LspHover<CR>
nnoremap <silent> <Leader>a :LspCodeAction<CR>
nnoremap <silent> <Leader>e :LspRename<CR>
nnoremap <silent> <Leader>r :LspReferences<CR>
nnoremap <silent> <Leader>i :LspImplementation<CR>
nnoremap <silent> <Leader>f :LspDocumentFormat<CR>
nnoremap <silent> <Leader>l :LspDocumentDiagnostics<CR>
nnoremap <silent> <Leader>n :LspNextError<CR>
nnoremap <silent> <Leader>p :LspPreviousError<CR>

imap <C-N> <Plug>(copilot-next)
imap <C-P> <Plug>(copilot-previous)
